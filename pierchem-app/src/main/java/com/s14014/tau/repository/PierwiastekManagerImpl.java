/*package com.s14014.tau.repository;

import com.s14014.tau.domain.*;

import java.sql.*;
import java.util.LinkedList;
import java.util.List;

import javax.resource.spi.IllegalStateException;

public class PierwiastekManagerImpl implements PierwiastekRepository{

    private Connection connection;

    private PreparedStatement addPierwiastekStmt;
    private PreparedStatement getAllPierwiastekStmt;
    private PreparedStatement deletePierwiastekStmt;
    private PreparedStatement updatePierwiastekStmt;
    
    public PierwiastekManagerImpl(Connection connection) throws SQLException{
        this.connection = connection;
        if(!isDatabaseReady()){
            createTables();
        }

        setConnection(connection);
    }

    public void createTables() throws SQLException{
        connection.createStatement().executeUpdate(
            "CREATE TABLE " + "Pierwiastek(id int GENERATED BY DEFAULT AS IDENTITY," + 
            "nazwa varchar(30) NOT NULL," + "nrOkresu int(255) NOT NULL," + "nrGrupy int(255) NOT NULL," + "liczbaElektronow int(255) NOT NULL)"
        );      
    }

    public boolean isDatabaseReady() {
        try {
            ResultSet rs = connection.getMetaData().getTables(null, null, null, null);
            boolean tableExists = false;
            while (rs.next()) {
                if ("Pierwiastek".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
                    tableExists = true;
                    break;
                }
            }
            return tableExists;
        } catch (SQLException e) {
            return false;
        }
    }

    public void setConnection(Connection connection) throws SQLException {
        this.connection = connection;
        addPierwiastekStmt = connection.
        prepareStatement("INSERT INTO Person (nazwa, nrOkresu, nrGrupy, liczbaElektronow) VALUES (?, ?, ?, ?)");
        
        getAllPierwiastekStmt = connection.
        prepareStatement("SELECT id, nazwa, nrOkresu, nrGrupy, liczbaElektornow FROM Pierwiastek");

        updatePierwiastekStmt = connection.
        prepareStatement("UPDATE Pierwiastek SET nazwa=?, nrOkresu=?, nrGrupy=?, liczbaElektronow=? WHERE id=?");

        deletePierwiastekStmt = connection.
        prepareStatement("DELETE FROM Pierwiastek WHERE id=?");
    }

    @Override
    public void add(Pierwiastek p){


        try{
            addPierwiastekStmt.setString(1, p.getNazwa());
            addPierwiastekStmt.setInt(2, p.getNrOkresu());
            addPierwiastekStmt.executeUpdate();
        } catch(SQLException e) {
            e.printStackTrace();        
        }


    }

	@Override
	public void initDatabase() {
		
	}


	@Override
	public List<Pierwiastek> getAll() {
        List<Pierwiastek> tablMend = new LinkedList<>();
        try{
            ResultSet rs = getAllPierwiastekStmt.executeQuery();

            while (rs.next()){
                Pierwiastek p = new Pierwiastek();
                p.setId(rs.getInt("id"));
                p.setNazwa(rs.getString("nazwa"));
                p.setNrOkresu(rs.getInt("nrOkresu"));
                p.setNrGrupy(rs.getInt("nrGrupy"));
                p.setLiczbaElektronow(rs.getInt("liczbaElektronow"));
                tablMend.add(p);
            }
        }

        catch(SQLException e){
            e.printStackTrace();        
        }

        return tablMend;

        
	}

	@Override
	public int deleteById(int id) {
        if(p==null){
            throw new NullPointerException("");
        }
		try{

            deletePierwiastekStmt.setInt(1, p.getId());
            deletePierwiastekStmt.executeUpdate();
            
        }

        catch(SQLException e) {
            e.printStackTrace();        
        }

    }





	@Override
	public void updateById(Pierwiastek p) {
		try{

            updatePierwiastekStmt.setString(1, p.getNazwa());
            updatePierwiastekStmt.setInt(2, p.getNrOkresu());
            updatePierwiastekStmt.setInt(3, p.getNrGrupy());
            updatePierwiastekStmt.setInt(4, p.getLiczbaElektronow());

            updatePierwiastekStmt.setInt(5, p.getId());

            updatePierwiastekStmt.executeUpdate();
            
        } catch(SQLException e) {
            e.printStackTrace();        
        }


    }
}
*/